Further Advanced Python - April 2023
====================================
https://s3.eu-west-1.amazonaws.com/neueda.conygre.com/Sites/Beyond_A_Python/site/index.html

Toby Dussek

9:30
11:00
12:30
3:00
4:30

Monday
> welcome
- we will be installing additional packages as needed
> design patterns (and anti-patterns)
> factory and facade patterns
> decorator pattern (using @)
> command pattern
> proxy pattern
> after lunch review exercise
> observables and subscribers
> we will need Jupyter later in the week

Tuesday
> where we got to - summary of design patterns
> state pattern
> RxPY https://rxpy.readthedocs.io/en/latest/index.html
       https://rxmarbles.com/
> concurrency and parallel code
> overview: thread functions and thread classes
> thread locks/rlocks/semaphores
> after lunch review exercise
- thread decorator

Wednesday
> where to get the recordings
> final look at @ decorator to make classes and methods thread safe (using Lock)
> multiprocessing
  ps -eaf | grep python - equivalent for Windows??? (wsl)
  Get-Process | Select-String -Pattern "python"
> performance and timing
> profiling with @profile and cProfile
> after lunch review exercise
> show-and-tell
> why use a thread or a process???
> generators, async await and coroutines
> prepare for Thursday ...

Thursday
> Python for Data Analysis
  we will need:
  > jupyter
  > numpy
  > pandas
  - matplotlib
	The easiest way to get all the bits and bobs is to use Anaconda
  data sources (csv, xlsx, text, db, url...)
> using Jupyter notebooks (via Jupyter, Anaconda, via VS Code plugin, or online or...)
   you can 'pip install jupyter' then start it with 'python -m notebook'
   then you will also need to pip install numpy, pandas etc.
> numpy and data structures: the arange and array 
> pandas: series and data-frame
- data vizualisation with matplotlib
> data cleansing and preparation
> descriptive statistics
> handling files and remote data
> after lunch review exercise
- careful - exporting a notebook does not add 'print' statements
 	 

Friday
- show fixed 2x2 plot grid
- review of microservices
- Flask: running as dev or prod server (performance and security)
- after lunch review exercise
- end of course feedback

where to go next
   https://www.geeksforgeeks.org/python-design-patterns/
   https://python-patterns.guide/
   https://rxpy.readthedocs.io/en/latest/ 
   https://pypi.org/project/memory-profiler/

https://pynative.com/python-exercises-with-solutions/
https://www.geeksforgeeks.org/python-exercises-practice-questions-and-solutions/
https://www.practicepython.org/exercises/
